const SW_VERSION=.14,CACHE_ROOT="astraios-cache",CACHE_NAME=`${CACHE_ROOT}-v0.14`,urlList=["/","/app.webmanifest","/index.html","/runtime.js","/polyfills.js","/main.js","/styles.css","/166.js","/427.js","/817.js","/assets/images/0.webp","/assets/images/1.webp","/assets/images/shiba1.webp","/assets/images/cover1.webp","/assets/images/cover2.webp","/assets/images/cover3.webp"];function getBaseUrl(e){let t=e.slice(9).indexOf("/");return e.slice(0,9+t)}self.addEventListener("install",e=>{e.waitUntil(caches.open(CACHE_NAME).then(t=>t.addAll(urlList)).catch(t=>{console.error(t)}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(t=>Promise.all(t.map(r=>{if(CACHE_NAME!==r&&r.startsWith(CACHE_ROOT))return caches.delete(r)}))))}),self.addEventListener("fetch",e=>{let t=e.request.url;console.log(t,"cache");let r=new Promise(async(n,i)=>{let a=await caches.match(e.request).then(s=>(console.log(t,s),s||null));a||(a=await fetch(e.request).then(s=>200!=s.status&&206!=s.status?null:(console.log("url, network success..."),200==s.status&&caches.open(CACHE_NAME).then(c=>c.put(e.request,s)),s.clone())).catch(()=>null),a||(a=await caches.match(new URL("/",getBaseUrl(t))).then(s=>s||Response.error()))),n(a)});e.respondWith(r)});